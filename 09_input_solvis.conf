# Retrieve data from MODBUS slave devices
[[inputs.modbus]]
  ## Connection Configuration
  ##
  ## The plugin supports connections to PLCs via MODBUS/TCP or
  ## via serial line communication in binary (RTU) or readable (ASCII) encoding
  ##
  ## Device name
  name = "Solvis SC-3"
  name_override = "sc3"

  ## Slave ID - addresses a MODBUS device on the bus
  ## Range: 0 - 255 [0 = broadcast; 248 - 255 = reserved]
  slave_id = 101

  ## Timeout for each request
  timeout = "1s"

  ## Maximum number of retries and the time to wait between retries
  ## when a slave-device is busy.
  # busy_retries = 0
  # busy_retries_wait = "100ms"

  # TCP - connect via Modbus/TCP
  controller = "tcp://172.20.13.60:502"

  ## Serial (RS485; RS232)
  # controller = "file:///dev/ttyUSB0"
  # baud_rate = 9600
  # data_bits = 8
  # parity = "N"
  # stop_bits = 1
  # transmission_mode = "RTU"


  ## Measurements
  ##

  ## Digital Variables, Discrete Inputs and Coils
  ## measurement - the (optional) measurement name, defaults to "modbus"
  ## name        - the variable name
  ## address     - variable address

#   discrete_inputs = [
#     { name = "start",          address = [0]},
#     { name = "stop",           address = [1]},
#     { name = "reset",          address = [2]},
#     { name = "emergency_stop", address = [3]},
#   ]
#   coils = [
#     { name = "motor1_run",     address = [0]},
#     { name = "motor1_jog",     address = [1]},
#     { name = "motor1_stop",    address = [2]},
#   ]
#
#   ## Analog Variables, Input Registers and Holding Registers
#   ## measurement - the (optional) measurement name, defaults to "modbus"
#   ## name        - the variable name
#   ## byte_order  - the ordering of bytes
#   ##  |---AB, ABCD   - Big Endian
#   ##  |---BA, DCBA   - Little Endian
#   ##  |---BADC       - Mid-Big Endian
#   ##  |---CDAB       - Mid-Little Endian
#   ## data_type  - INT16, UINT16, INT32, UINT32, INT64, UINT64, FLOAT32-IEEE (the IEEE 754 binary representation)
#   ##              FLOAT32, FIXED, UFIXED (fixed-point representation on input)
#   ## scale      - the final numeric variable representation
#   ## address    - variable address
#
#  holding_registers = [
#  ]

  input_registers = [
    { name = "Speicher oben", byte_order = "AB", data_type = "INT16", scale=1.0, address = [33024]},
    { name = "Warmwasser", byte_order = "AB", data_type = "INT16", scale=1.0, address = [33025]},
    { name = "Speicherreferenz", byte_order = "AB", data_type = "INT16", scale=1.0, address = [33026]},
    { name = "Heizungspuffer oben", byte_order = "AB", data_type = "INT16", scale=1.0, address = [33024]},
    { name = "Heizungspuffer unten", byte_order = "AB", data_type = "INT16", scale=1.0, address = [33032]},
    { name = "Au√üentemperatur", byte_order = "AB", data_type = "INT16", scale=1.0, address = [33033]},
    { name = "Zirkulation", byte_order = "AB", data_type = "INT16", scale=1.0, address = [33034]},
    { name = "Vorlauf HK1", byte_order = "AB", data_type = "INT16", scale=1.0, address = [33035]},
    { name = "Vorlauf Lea", byte_order = "AB", data_type = "INT16", scale=1.0, address = [33037]},
    { name = "Kaltwasser", byte_order = "AB", data_type = "INT16", scale=1.0, address = [33038]},
    { name = "Volumentsrom Wasser", byte_order = "AB", data_type = "INT16", scale=1.0, address = [33041]},
    { name = "Pumpe Zirkulation", byte_order = "AB", data_type = "INT16", scale=1.0, address = [33280]},
    { name = "Ladepumpe PLAS-WP", byte_order = "AB", data_type = "INT16", scale=1.0, address = [33281]},
    { name = "Pumpe HK1", byte_order = "AB", data_type = "INT16", scale=1.0, address = [33282]},
    { name = "HK1 Mischer auf", byte_order = "AB", data_type = "INT16", scale=1.0, address = [33287]},
    { name = "HK1 Mischer zu", byte_order = "AB", data_type = "INT16", scale=1.0, address = [33288]},
    { name = "Brenner 230V~", byte_order = "AB", data_type = "INT16", scale=1.0, address = [33291]},
    { name = "3-Wege Ventil", byte_order = "AB", data_type = "INT16", scale=1.0, address = [33293]},
    { name = "Laufzeit Brenner1", byte_order = "AB", data_type = "INT16", scale=1.0, address = [33536]},
    { name = "Starts Brenner 1", byte_order = "AB", data_type = "INT16", scale=1.0, address = [33537]},
    { name = "Laufzeit Brenner2", byte_order = "AB", data_type = "INT16", scale=1.0, address = [33538]},
    { name = "Brenner Leistung", byte_order = "AB", data_type = "INT16", scale=1.0, address = [33539]},
    { name = "Ionisationsstrom", byte_order = "AB", data_type = "INT16", scale=1.0, address = [33540]},
   ]

#   input_registers = [
#     { name = "tank_level",   byte_order = "AB",   data_type = "INT16",   scale=1.0,     address = [0]},
#     { name = "tank_ph",      byte_order = "AB",   data_type = "INT16",   scale=1.0,     address = [1]},
#     { name = "pump1_speed",  byte_order = "ABCD", data_type = "INT32",   scale=1.0,     address = [3,4]},
#   ]
